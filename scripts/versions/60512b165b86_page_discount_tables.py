"""page discount tables

Revision ID: 60512b165b86
Revises: e8cd77984994
Create Date: 2023-05-16 15:14:15.085349

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import imp
import os
alembic_helpers = imp.load_source('alembic_helpers', (
    os.getcwd() + '/' + op.get_context().script.dir + '/alembic_helpers.py'))

# revision identifiers, used by Alembic.
revision = '60512b165b86'
down_revision = 'e8cd77984994'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
 if(alembic_helpers.table_does_not_exist('wallet')):
    op.create_table('wallet',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('wallet_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('balance', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='wallet_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='wallet_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_wallet_id', 'wallet', ['id'], unique=False)

 if(alembic_helpers.table_does_not_exist('job')):
    op.create_table('job',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('company', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('company_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_posted', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name='job_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='job_pkey')
    )
    op.create_index('ix_job_id', 'job', ['id'], unique=False)

 if(alembic_helpers.table_does_not_exist('wallethistory')):    
    op.create_table('wallethistory',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('wallet_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('balance_before', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('balance_after', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('reference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('method', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='wallethistory_user_id_fkey'),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallet.id'], name='wallethistory_wallet_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='wallethistory_pkey'),
    sa.UniqueConstraint('reference', name='wallethistory_reference_key')
    )
    op.create_index('ix_wallethistory_id', 'wallethistory', ['id'], unique=False)

 if(alembic_helpers.table_does_not_exist('transaction')):    
    op.create_table('transaction',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reference', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('memo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('extras', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('transaction_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('transaction_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('balance_before', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('balance_after', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name='transaction_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='transaction_pkey'),
    sa.UniqueConstraint('reference', name='transaction_reference_key')
    )
    op.create_index('ix_transaction_id', 'transaction', ['id'], unique=False)

 if(alembic_helpers.table_does_not_exist('user')):    
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('balance', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_logged_in', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('phone', name='user_phone_key')
    )
    op.create_index('ix_user_id', 'user', ['id'], unique=False)
    op.create_index('ix_user_email', 'user', ['email'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_email', table_name='user')
    op.drop_index('ix_user_id', table_name='user')
    op.drop_table('user')
    op.drop_index('ix_transaction_id', table_name='transaction')
    op.drop_table('transaction')
    op.drop_index('ix_wallethistory_id', table_name='wallethistory')
    op.drop_table('wallethistory')
    op.drop_index('ix_job_id', table_name='job')
    op.drop_table('job')
    op.drop_index('ix_wallet_id', table_name='wallet')
    op.drop_table('wallet')
    # ### end Alembic commands ###
